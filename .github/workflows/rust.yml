name: integration-test

run-name: 'Run test against real rabbitmq server'

on: [push, workflow_dispatch]
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  
env:
  CARGO_TERM_COLOR: always

jobs:

  builds:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: cargo build (debug, all-features)
      run: cargo build --all-features --verbose

    - name: cargo build (debug, tls)
      run: cargo build -F tls --verbose

  test_all_features:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Start RabbitMQ server
      run:  |
        sudo chown -R 1001:root rabbitmq_conf/server
        sudo chmod 755 rabbitmq_conf/server
        sudo chmod 400 rabbitmq_conf/server/*
        docker-compose up -d

    - name: doc tests (debug, all-features)
      run: cargo test --all-features --doc --verbose

    - name: unit tests (debug, all-features)
      run: cargo test --all-features --lib --verbose
    
    - name: integration tests (release, all-features)
      run: cargo test --release --all-features --test '*'

    - name: examples (release, all-features)
      run: cargo run --release --example 2>&1 | grep -E '^ ' | xargs -n1 cargo run --release --all-features --example

  test_features_combination:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Start RabbitMQ server
      run:  |
        sudo chown -R 1001:root rabbitmq_conf/server
        sudo chmod 755 rabbitmq_conf/server
        sudo chmod 400 rabbitmq_conf/server/*
        docker-compose up -d

    - name: default
      run: cargo test

    - name: tracing
      run: cargo test -F tracing

    - name: compliance_assert
      run: cargo test -F compliance_assert

    - name: tls feature
      run: cargo test -F tls      